//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets0A87A6C5E71CD40C8E5F7737968F60B3B58EA9279BE99F9C30713F09C3A3129E))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets0A87A6C5E71CD40C8E5F7737968F60B3B58EA9279BE99F9C30713F09C3A3129E : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets0A87A6C5E71CD40C8E5F7737968F60B3B58EA9279BE99F9C30713F09C3A3129E()
        {
            this.EdmEntityContainerName = "BAPOCOs";
            this.StoreEntityContainerName = "BreakAwayModelStoreContainer";
            this.HashOverMappingClosure = "a65b4b99242da693b24412d46954a3b4a5eba5eada43bd891ee460f3827d0238";
            this.HashOverAllExtentViews = "8200a286997b42de6dd1a5340ac18d334753bc5b10e5d3e194e6c2ebdfed64a9";
            this.ViewCount = 34;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Activities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Activities", @"
    SELECT VALUE -- Constructing Activities
        [BreakAwayModel.Store.Activities](T1.Activities_ActivityID, T1.Activities_Activity, T1.Activities_imagepath, T1.Activities_Category)
    FROM (
        SELECT 
            T.ActivityID AS Activities_ActivityID, 
            T.Name AS Activities_Activity, 
            T.imagepath AS Activities_imagepath, 
            T.Category AS Activities_Category, 
            True AS _from0
        FROM BAPOCOs.Activities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Contact", @"
    SELECT VALUE -- Constructing Contact
        [BreakAwayModel.Store.Contact](T1.Contact_ContactID, T1.Contact_FirstName, T1.Contact_LastName, T1.Contact_Title, T1.Contact_AddDate, T1.Contact_ModifiedDate, T1.Contact_RowVersion)
    FROM (
        SELECT 
            T.ContactID AS Contact_ContactID, 
            T.FirstName AS Contact_FirstName, 
            T.LastName AS Contact_LastName, 
            T.Title AS Contact_Title, 
            T.AddDate AS Contact_AddDate, 
            T.ModifiedDate AS Contact_ModifiedDate, 
            T.RowVersion AS Contact_RowVersion, 
            True AS _from0
        FROM BAPOCOs.Contacts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Customers", @"
    SELECT VALUE -- Constructing Customers
        [BreakAwayModel.Store.Customers](T1.Customers_ContactID, T1.Customers_CustomerTypeID, T1.Customers_InitialDate, T1.Customers_PrimaryDesintation, T1.Customers_SecondaryDestination, T1.Customers_PrimaryActivity, T1.Customers_SecondaryActivity, T1.Customers_Notes, T1.Customers_RowVersion)
    FROM (
        SELECT 
            T.ContactID AS Customers_ContactID, 
            TREAT(T AS [BAPOCOModel.Customer]).CustomerTypeID AS Customers_CustomerTypeID, 
            TREAT(T AS [BAPOCOModel.Customer]).InitialDate AS Customers_InitialDate, 
            TREAT(T AS [BAPOCOModel.Customer]).PrimaryDestinationID AS Customers_PrimaryDesintation, 
            TREAT(T AS [BAPOCOModel.Customer]).SecondaryDestinationID AS Customers_SecondaryDestination, 
            TREAT(T AS [BAPOCOModel.Customer]).PrimaryActivityID AS Customers_PrimaryActivity, 
            TREAT(T AS [BAPOCOModel.Customer]).SecondaryActivityID AS Customers_SecondaryActivity, 
            TREAT(T AS [BAPOCOModel.Customer]).Notes AS Customers_Notes, 
            TREAT(T AS [BAPOCOModel.Customer]).CustRowVersion AS Customers_RowVersion, 
            True AS _from0
        FROM BAPOCOs.Contacts AS T
        WHERE T IS OF (ONLY [BAPOCOModel.Customer])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.ContactPersonalInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.ContactPersonalInfo", @"
    SELECT VALUE -- Constructing ContactPersonalInfo
        [BreakAwayModel.Store.ContactPersonalInfo](T1.ContactPersonalInfo_ContactID, T1.ContactPersonalInfo_BirthDate, T1.ContactPersonalInfo_HeightInches, T1.ContactPersonalInfo_WeightPounds, T1.ContactPersonalInfo_DietaryRestrictions)
    FROM (
        SELECT 
            T.ContactID AS ContactPersonalInfo_ContactID, 
            TREAT(T AS [BAPOCOModel.Customer]).BirthDate AS ContactPersonalInfo_BirthDate, 
            TREAT(T AS [BAPOCOModel.Customer]).HeightInches AS ContactPersonalInfo_HeightInches, 
            TREAT(T AS [BAPOCOModel.Customer]).WeightPounds AS ContactPersonalInfo_WeightPounds, 
            TREAT(T AS [BAPOCOModel.Customer]).DietaryRestrictions AS ContactPersonalInfo_DietaryRestrictions, 
            True AS _from0
        FROM BAPOCOs.Contacts AS T
        WHERE T IS OF (ONLY [BAPOCOModel.Customer])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.CustomerTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.CustomerTypes", @"
    SELECT VALUE -- Constructing CustomerTypes
        [BreakAwayModel.Store.CustomerTypes](T1.CustomerTypes_CustomerTypeID, T1.CustomerTypes_CustomerType)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerTypes_CustomerTypeID, 
            T.Type AS CustomerTypes_CustomerType, 
            True AS _from0
        FROM BAPOCOs.CustomerTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Equipment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Equipment", @"
    SELECT VALUE -- Constructing Equipment
        [BreakAwayModel.Store.Equipment](T1.Equipment_EquipmentID, T1.Equipment_Equipment)
    FROM (
        SELECT 
            T.EquipmentID AS Equipment_EquipmentID, 
            T.Name AS Equipment_Equipment, 
            True AS _from0
        FROM BAPOCOs.EquipmentSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Events
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Events", @"
    SELECT VALUE -- Constructing Events
        [BreakAwayModel.Store.Events](T1.Events_EventID, T1.Events_LocationID, T1.Events_LodgingID, T1.Events_StartDate, T1.Events_EndDate, T1.Events_TripCostUSD)
    FROM (
        SELECT 
            T.TripID AS Events_EventID, 
            T.DestinationID AS Events_LocationID, 
            T.LodgingID AS Events_LodgingID, 
            T.StartDate AS Events_StartDate, 
            T.EndDate AS Events_EndDate, 
            T.TripCostUSD AS Events_TripCostUSD, 
            True AS _from0
        FROM BAPOCOs.Trips AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Locations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Locations", @"
    SELECT VALUE -- Constructing Locations
        [BreakAwayModel.Store.Locations](T1.Locations_LocationID, T1.Locations_LocationName)
    FROM (
        SELECT 
            T.DestinationID AS Locations_LocationID, 
            T.Name AS Locations_LocationName, 
            True AS _from0
        FROM BAPOCOs.Destinations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Lodging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Lodging", @"
    SELECT VALUE -- Constructing Lodging
        [BreakAwayModel.Store.Lodging](T2.Lodging_LodgingID, T2.Lodging_LodgingName, T2.Lodging_ContactID, T2.Lodging_LocationID, T2.Lodging_Resort, T2.Lodging_ResortChainOwner, T2.Lodging_LuxuryResort)
    FROM (
        SELECT -- Constructing Resort
            CASE
                WHEN T1._from0 THEN True
                ELSE False
            END AS Lodging_Resort, 
            T1.Lodging_LodgingID, T1.Lodging_LodgingName, T1.Lodging_ContactID, T1.Lodging_LocationID, T1.Lodging_ResortChainOwner, T1.Lodging_LuxuryResort
        FROM (
            SELECT 
                T.LodgingID AS Lodging_LodgingID, 
                T.LodgingName AS Lodging_LodgingName, 
                T.ContactID AS Lodging_ContactID, 
                T.LocationID AS Lodging_LocationID, 
                TREAT(T AS [BAPOCOModel.Resort]).ResortChainOwner AS Lodging_ResortChainOwner, 
                TREAT(T AS [BAPOCOModel.Resort]).LuxuryResort AS Lodging_LuxuryResort, 
                CASE WHEN T IS OF (ONLY [BAPOCOModel.Resort]) THEN True ELSE False END AS _from0, 
                CASE WHEN T IS OF (ONLY [BAPOCOModel.Lodging]) THEN True ELSE False END AS _from1
            FROM BAPOCOs.Lodgings AS T
        ) AS T1
    ) AS T2");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Payments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Payments", @"
    SELECT VALUE -- Constructing Payments
        [BreakAwayModel.Store.Payments](T1.Payments_PaymentID, T1.Payments_PaymentDate, T1.Payments_ReservationID, T1.Payments_Amount, T1.Payments_ModifiedDate, T1.Payments_RowVersion, T1.Payments_ContactID)
    FROM (
        SELECT 
            T.PaymentID AS Payments_PaymentID, 
            T.PaymentDate AS Payments_PaymentDate, 
            T.ReservationID AS Payments_ReservationID, 
            T.Amount AS Payments_Amount, 
            T.ModifiedDate AS Payments_ModifiedDate, 
            T.RowVersion AS Payments_RowVersion, 
            T.ContactID AS Payments_ContactID, 
            True AS _from0
        FROM BAPOCOs.Payments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Reservations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Reservations", @"
    SELECT VALUE -- Constructing Reservations
        [BreakAwayModel.Store.Reservations](T1.Reservations_ReservationID, T1.Reservations_ReservationDate, T1.Reservations_ContactID, T1.Reservations_EventID, T1.Reservations_RowVersion)
    FROM (
        SELECT 
            T.ReservationID AS Reservations_ReservationID, 
            T.ReservationDate AS Reservations_ReservationDate, 
            T.ContactID AS Reservations_ContactID, 
            T.TripID AS Reservations_EventID, 
            T.RowVersion AS Reservations_RowVersion, 
            True AS _from0
        FROM BAPOCOs.Reservations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.Address
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.Address", @"
    SELECT VALUE -- Constructing Address
        [BreakAwayModel.Store.Address](T1.Address_addressID, T1.Address_Street1, T1.Address_Street2, T1.Address_City, T1.Address_StateProvince, T1.Address_CountryRegion, T1.Address_PostalCode, T1.Address_AddressType, T1.Address_ContactID, T1.Address_ModifiedDate, T1.Address_RowVersion)
    FROM (
        SELECT 
            T.addressID AS Address_addressID, 
            T.Mail.Street1 AS Address_Street1, 
            T.Mail.Street2 AS Address_Street2, 
            T.Mail.City AS Address_City, 
            T.Mail.StateProvince AS Address_StateProvince, 
            T.CountryRegion AS Address_CountryRegion, 
            T.PostalCode AS Address_PostalCode, 
            T.AddressType AS Address_AddressType, 
            T.ContactID AS Address_ContactID, 
            T.ModifiedDate AS Address_ModifiedDate, 
            T.RowVersion AS Address_RowVersion, 
            True AS _from0
        FROM BAPOCOs.Addresses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.ActivityEquipment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.ActivityEquipment", @"
    SELECT VALUE -- Constructing ActivityEquipment
        [BreakAwayModel.Store.ActivityEquipment](T1.ActivityEquipment_ActivityID, T1.ActivityEquipment_EquipmentID)
    FROM (
        SELECT 
            Key(T.Activities).ActivityID AS ActivityEquipment_ActivityID, 
            Key(T.Equipment).EquipmentID AS ActivityEquipment_EquipmentID, 
            True AS _from0
        FROM BAPOCOs.ActivityEquipment AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.EventActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.EventActivities", @"
    SELECT VALUE -- Constructing EventActivities
        [BreakAwayModel.Store.EventActivities](T1.EventActivities_EventID, T1.EventActivities_ActivityID)
    FROM (
        SELECT 
            Key(T.Events).TripID AS EventActivities_EventID, 
            Key(T.Activities).ActivityID AS EventActivities_ActivityID, 
            True AS _from0
        FROM BAPOCOs.EventActivities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Activities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Activities", @"
    SELECT VALUE -- Constructing Activities
        [BAPOCOModel.Activity](T1.Activity_ActivityID, T1.Activity_Name, T1.Activity_imagepath, T1.Activity_Category)
    FROM (
        SELECT 
            T.ActivityID AS Activity_ActivityID, 
            T.Activity AS Activity_Name, 
            T.imagepath AS Activity_imagepath, 
            T.Category AS Activity_Category, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Activities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Contacts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3763);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Contacts\r\n        CASE\r\n            WHEN T5._");
            viewString.Append("from0 THEN [BAPOCOModel.Customer](T5.Contact_ContactID, T5.Contact_FirstName, T5");
            viewString.Append(".Contact_LastName, T5.Contact_Title, T5.Contact_AddDate, T5.Contact_ModifiedDate");
            viewString.Append(", T5.Contact_RowVersion, T5.Customer_CustomerTypeID, T5.Customer_InitialDate, T5");
            viewString.Append(".Customer_PrimaryDestinationID, T5.Customer_SecondaryDestinationID, T5.Customer_");
            viewString.Append("PrimaryActivityID, T5.Customer_SecondaryActivityID, T5.Customer_Notes, T5.Custom");
            viewString.Append("er_BirthDate, T5.Customer_HeightInches, T5.Customer_WeightPounds, T5.Customer_Di");
            viewString.Append("etaryRestrictions, T5.Customer_CustRowVersion)\r\n            ELSE [BAPOCOModel.No");
            viewString.Append("nCustomer](T5.Contact_ContactID, T5.Contact_FirstName, T5.Contact_LastName, T5.C");
            viewString.Append("ontact_Title, T5.Contact_AddDate, T5.Contact_ModifiedDate, T5.Contact_RowVersion");
            viewString.Append(")\r\n        END\r\n    FROM (\r\n        SELECT T1.Contact_ContactID, T1.Contact_Firs");
            viewString.Append("tName, T1.Contact_LastName, T1.Contact_Title, T1.Contact_AddDate, T1.Contact_Mod");
            viewString.Append("ifiedDate, T1.Contact_RowVersion, T4.Customer_CustomerTypeID, T4.Customer_Initia");
            viewString.Append("lDate, T4.Customer_PrimaryDestinationID, T4.Customer_SecondaryDestinationID, T4.");
            viewString.Append("Customer_PrimaryActivityID, T4.Customer_SecondaryActivityID, T4.Customer_Notes, ");
            viewString.Append("T4.Customer_BirthDate, T4.Customer_HeightInches, T4.Customer_WeightPounds, T4.Cu");
            viewString.Append("stomer_DietaryRestrictions, T4.Customer_CustRowVersion, (T4._from0 AND T4._from0");
            viewString.Append(" IS NOT NULL) AS _from0, T1._from1, (T4._from2 AND T4._from2 IS NOT NULL) AS _fr");
            viewString.Append("om2\r\n        FROM  (\r\n            SELECT \r\n                T.ContactID AS Contac");
            viewString.Append("t_ContactID, \r\n                T.FirstName AS Contact_FirstName, \r\n             ");
            viewString.Append("   T.LastName AS Contact_LastName, \r\n                T.Title AS Contact_Title, \r");
            viewString.Append("\n                T.AddDate AS Contact_AddDate, \r\n                T.ModifiedDate ");
            viewString.Append("AS Contact_ModifiedDate, \r\n                T.RowVersion AS Contact_RowVersion, \r");
            viewString.Append("\n                True AS _from1\r\n            FROM BreakAwayModelStoreContainer.C");
            viewString.Append("ontact AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n            SELECT T2.Contact");
            viewString.Append("_ContactID, T3.Customer_CustomerTypeID, T3.Customer_InitialDate, T3.Customer_Pri");
            viewString.Append("maryDestinationID, T3.Customer_SecondaryDestinationID, T3.Customer_PrimaryActivi");
            viewString.Append("tyID, T3.Customer_SecondaryActivityID, T3.Customer_Notes, T2.Customer_BirthDate,");
            viewString.Append(" T2.Customer_HeightInches, T2.Customer_WeightPounds, T2.Customer_DietaryRestrict");
            viewString.Append("ions, T3.Customer_CustRowVersion, T3._from0, T2._from2\r\n            FROM  (\r\n   ");
            viewString.Append("             SELECT \r\n                    T.ContactID AS Contact_ContactID, \r\n  ");
            viewString.Append("                  T.BirthDate AS Customer_BirthDate, \r\n                    T.Hei");
            viewString.Append("ghtInches AS Customer_HeightInches, \r\n                    T.WeightPounds AS Cust");
            viewString.Append("omer_WeightPounds, \r\n                    T.DietaryRestrictions AS Customer_Dieta");
            viewString.Append("ryRestrictions, \r\n                    True AS _from2\r\n                FROM Break");
            viewString.Append("AwayModelStoreContainer.ContactPersonalInfo AS T) AS T2\r\n                INNER J");
            viewString.Append("OIN (\r\n                SELECT \r\n                    T.ContactID AS Contact_Conta");
            viewString.Append("ctID, \r\n                    T.CustomerTypeID AS Customer_CustomerTypeID, \r\n     ");
            viewString.Append("               T.InitialDate AS Customer_InitialDate, \r\n                    T.Pr");
            viewString.Append("imaryDesintation AS Customer_PrimaryDestinationID, \r\n                    T.Secon");
            viewString.Append("daryDestination AS Customer_SecondaryDestinationID, \r\n                    T.Prim");
            viewString.Append("aryActivity AS Customer_PrimaryActivityID, \r\n                    T.SecondaryActi");
            viewString.Append("vity AS Customer_SecondaryActivityID, \r\n                    T.Notes AS Customer_");
            viewString.Append("Notes, \r\n                    T.RowVersion AS Customer_CustRowVersion, \r\n        ");
            viewString.Append("            True AS _from0\r\n                FROM BreakAwayModelStoreContainer.Cu");
            viewString.Append("stomers AS T) AS T3\r\n                ON T2.Contact_ContactID = T3.Contact_Contac");
            viewString.Append("tID) AS T4\r\n            ON T1.Contact_ContactID = T4.Contact_ContactID\r\n    ) AS");
            viewString.Append(" T5");
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Contacts", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BAPOCOs.CustomerTypes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.CustomerTypes", @"
    SELECT VALUE -- Constructing CustomerTypes
        [BAPOCOModel.CustomerType](T1.CustomerType_CustomerTypeID, T1.CustomerType_Type)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerType_CustomerTypeID, 
            T.CustomerType AS CustomerType_Type, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.CustomerTypes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.EquipmentSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.EquipmentSet", @"
    SELECT VALUE -- Constructing EquipmentSet
        [BAPOCOModel.Equipment](T1.Equipment_EquipmentID, T1.Equipment_Name)
    FROM (
        SELECT 
            T.EquipmentID AS Equipment_EquipmentID, 
            T.Equipment AS Equipment_Name, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Equipment AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Trips
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Trips", @"
    SELECT VALUE -- Constructing Trips
        [BAPOCOModel.Trip](T1.Trip_TripID, T1.Trip_DestinationID, T1.Trip_LodgingID, T1.Trip_StartDate, T1.Trip_EndDate, T1.Trip_TripCostUSD)
    FROM (
        SELECT 
            T.EventID AS Trip_TripID, 
            T.LocationID AS Trip_DestinationID, 
            T.LodgingID AS Trip_LodgingID, 
            T.StartDate AS Trip_StartDate, 
            T.EndDate AS Trip_EndDate, 
            T.TripCostUSD AS Trip_TripCostUSD, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Events AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Destinations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Destinations", @"
    SELECT VALUE -- Constructing Destinations
        [BAPOCOModel.Destination](T1.Destination_DestinationID, T1.Destination_Name)
    FROM (
        SELECT 
            T.LocationID AS Destination_DestinationID, 
            T.LocationName AS Destination_Name, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Locations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Lodgings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Lodgings", @"
    SELECT VALUE -- Constructing Lodgings
        CASE
            WHEN T1._from1 THEN [BAPOCOModel.Lodging](T1.Lodging_LodgingID, T1.Lodging_LodgingName, T1.Lodging_ContactID, T1.Lodging_LocationID)
            ELSE [BAPOCOModel.Resort](T1.Lodging_LodgingID, T1.Lodging_LodgingName, T1.Lodging_ContactID, T1.Lodging_LocationID, T1.Resort_ResortChainOwner, T1.Resort_LuxuryResort)
        END
    FROM (
        SELECT 
            T.LodgingID AS Lodging_LodgingID, 
            T.LodgingName AS Lodging_LodgingName, 
            T.ContactID AS Lodging_ContactID, 
            T.LocationID AS Lodging_LocationID, 
            T.ResortChainOwner AS Resort_ResortChainOwner, 
            T.LuxuryResort AS Resort_LuxuryResort, 
            CASE WHEN T.Resort = True THEN True ELSE False END AS _from0, 
            CASE WHEN T.Resort = False THEN True ELSE False END AS _from1
        FROM BreakAwayModelStoreContainer.Lodging AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Payments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Payments", @"
    SELECT VALUE -- Constructing Payments
        [BAPOCOModel.Payment](T1.Payment_PaymentID, T1.Payment_PaymentDate, T1.Payment_ReservationID, T1.Payment_Amount, T1.Payment_ModifiedDate, T1.Payment_RowVersion, T1.Payment_ContactID)
    FROM (
        SELECT 
            T.PaymentID AS Payment_PaymentID, 
            T.PaymentDate AS Payment_PaymentDate, 
            T.ReservationID AS Payment_ReservationID, 
            T.Amount AS Payment_Amount, 
            T.ModifiedDate AS Payment_ModifiedDate, 
            T.RowVersion AS Payment_RowVersion, 
            T.ContactID AS Payment_ContactID, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Payments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Reservations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Reservations", @"
    SELECT VALUE -- Constructing Reservations
        [BAPOCOModel.Reservation](T1.Reservation_ReservationID, T1.Reservation_ReservationDate, T1.Reservation_ContactID, T1.Reservation_TripID, T1.Reservation_RowVersion)
    FROM (
        SELECT 
            T.ReservationID AS Reservation_ReservationID, 
            T.ReservationDate AS Reservation_ReservationDate, 
            T.ContactID AS Reservation_ContactID, 
            T.EventID AS Reservation_TripID, 
            T.RowVersion AS Reservation_RowVersion, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.Reservations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.Addresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.Addresses", @"
    SELECT VALUE -- Constructing Addresses
        [BAPOCOModel.Address](T2.Address_addressID, T2.Address_CountryRegion, T2.Address_PostalCode, T2.Address_AddressType, T2.Address_ContactID, T2.Address_ModifiedDate, T2.Address_RowVersion, T2.Address_Mail)
    FROM (
        SELECT -- Constructing Mail
            [BAPOCOModel.Mail](T1.Address_Mail_Street1, T1.Address_Mail_Street2, T1.Address_Mail_City, T1.Address_Mail_StateProvince) AS Address_Mail, 
            T1.Address_addressID, T1.Address_CountryRegion, T1.Address_PostalCode, T1.Address_AddressType, T1.Address_ContactID, T1.Address_ModifiedDate, T1.Address_RowVersion
        FROM (
            SELECT 
                T.addressID AS Address_addressID, 
                T.CountryRegion AS Address_CountryRegion, 
                T.PostalCode AS Address_PostalCode, 
                T.AddressType AS Address_AddressType, 
                T.ContactID AS Address_ContactID, 
                T.ModifiedDate AS Address_ModifiedDate, 
                T.RowVersion AS Address_RowVersion, 
                T.Street1 AS Address_Mail_Street1, 
                T.Street2 AS Address_Mail_Street2, 
                T.City AS Address_Mail_City, 
                T.StateProvince AS Address_Mail_StateProvince, 
                True AS _from0
            FROM BreakAwayModelStoreContainer.Address AS T
        ) AS T1
    ) AS T2");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.ActivityEquipment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.ActivityEquipment", @"
    SELECT VALUE -- Constructing ActivityEquipment
        [BAPOCOModel.ActivityEquipment](T3.ActivityEquipment_Activities, T3.ActivityEquipment_Equipment)
    FROM (
        SELECT -- Constructing Activities
            CreateRef(BAPOCOs.Activities, row(T2.ActivityEquipment_Activities_ActivityID),[BAPOCOModel.Activity]) AS ActivityEquipment_Activities, 
            T2.ActivityEquipment_Equipment
        FROM (
            SELECT -- Constructing Equipment
                CreateRef(BAPOCOs.EquipmentSet, row(T1.ActivityEquipment_Equipment_EquipmentID),[BAPOCOModel.Equipment]) AS ActivityEquipment_Equipment, 
                T1.ActivityEquipment_Activities_ActivityID
            FROM (
                SELECT 
                    T.ActivityID AS ActivityEquipment_Activities_ActivityID, 
                    T.EquipmentID AS ActivityEquipment_Equipment_EquipmentID, 
                    True AS _from0
                FROM BreakAwayModelStoreContainer.ActivityEquipment AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.EventActivities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.EventActivities", @"
    SELECT VALUE -- Constructing EventActivities
        [BAPOCOModel.EventActivities](T3.EventActivities_Activities, T3.EventActivities_Events)
    FROM (
        SELECT -- Constructing Activities
            CreateRef(BAPOCOs.Activities, row(T2.EventActivities_Activities_ActivityID),[BAPOCOModel.Activity]) AS EventActivities_Activities, 
            T2.EventActivities_Events
        FROM (
            SELECT -- Constructing Events
                CreateRef(BAPOCOs.Trips, row(T1.EventActivities_Events_TripID),[BAPOCOModel.Trip]) AS EventActivities_Events, 
                T1.EventActivities_Activities_ActivityID
            FROM (
                SELECT 
                    T.ActivityID AS EventActivities_Activities_ActivityID, 
                    T.EventID AS EventActivities_Events_TripID, 
                    True AS _from0
                FROM BreakAwayModelStoreContainer.EventActivities AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.CustomersinPastYear
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.CustomersinPastYear", "\r\n    SELECT VALUE -- Constructing CustomersinPastYear\r\n        [BreakAwayModel.S" +
                    "tore.CustomersinPastYear](T1.CustomersinPastYear_COntactID, T1.CustomersinPastYe" +
                    "ar_PrimaryDesintation, T1.CustomersinPastYear_CustomerTypeID, T1.CustomersinPast" +
                    "Year_InitialDate, T1.CustomersinPastYear_SecondaryDestination, T1.CustomersinPas" +
                    "tYear_PrimaryActivity, T1.CustomersinPastYear_SecondaryActivity, T1.CustomersinP" +
                    "astYear_Notes, T1.CustomersinPastYear_FirstName, T1.CustomersinPastYear_LastName" +
                    ", T1.CustomersinPastYear_Title, T1.CustomersinPastYear_AddDate, T1.CustomersinPa" +
                    "stYear_ModifiedDate)\r\n    FROM (\r\n        SELECT \r\n            T.COntactID AS Cu" +
                    "stomersinPastYear_COntactID, \r\n            T.PrimaryDesintation AS CustomersinPa" +
                    "stYear_PrimaryDesintation, \r\n            T.CustomerTypeID AS CustomersinPastYear" +
                    "_CustomerTypeID, \r\n            T.InitialDate AS CustomersinPastYear_InitialDate," +
                    " \r\n            T.SecondaryDestination AS CustomersinPastYear_SecondaryDestinatio" +
                    "n, \r\n            T.PrimaryActivity AS CustomersinPastYear_PrimaryActivity, \r\n   " +
                    "         T.SecondaryActivity AS CustomersinPastYear_SecondaryActivity, \r\n       " +
                    "     T.Notes AS CustomersinPastYear_Notes, \r\n            T.FirstName AS Customer" +
                    "sinPastYear_FirstName, \r\n            T.LastName AS CustomersinPastYear_LastName," +
                    " \r\n            T.Title AS CustomersinPastYear_Title, \r\n            T.AddDate AS " +
                    "CustomersinPastYear_AddDate, \r\n            T.ModifiedDate AS CustomersinPastYear" +
                    "_ModifiedDate, \r\n            True AS _from0\r\n        FROM BAPOCOs.CustomersinPas" +
                    "tYears AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.CustomersinPastYears
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.CustomersinPastYears", "\r\n    SELECT VALUE -- Constructing CustomersinPastYears\r\n        [BAPOCOModel.Cus" +
                    "tomersinPastYear](T1.CustomersinPastYear_COntactID, T1.CustomersinPastYear_Prima" +
                    "ryDesintation, T1.CustomersinPastYear_CustomerTypeID, T1.CustomersinPastYear_Ini" +
                    "tialDate, T1.CustomersinPastYear_SecondaryDestination, T1.CustomersinPastYear_Pr" +
                    "imaryActivity, T1.CustomersinPastYear_SecondaryActivity, T1.CustomersinPastYear_" +
                    "Notes, T1.CustomersinPastYear_FirstName, T1.CustomersinPastYear_LastName, T1.Cus" +
                    "tomersinPastYear_Title, T1.CustomersinPastYear_AddDate, T1.CustomersinPastYear_M" +
                    "odifiedDate)\r\n    FROM (\r\n        SELECT \r\n            T.COntactID AS Customersi" +
                    "nPastYear_COntactID, \r\n            T.PrimaryDesintation AS CustomersinPastYear_P" +
                    "rimaryDesintation, \r\n            T.CustomerTypeID AS CustomersinPastYear_Custome" +
                    "rTypeID, \r\n            T.InitialDate AS CustomersinPastYear_InitialDate, \r\n     " +
                    "       T.SecondaryDestination AS CustomersinPastYear_SecondaryDestination, \r\n   " +
                    "         T.PrimaryActivity AS CustomersinPastYear_PrimaryActivity, \r\n           " +
                    " T.SecondaryActivity AS CustomersinPastYear_SecondaryActivity, \r\n            T.N" +
                    "otes AS CustomersinPastYear_Notes, \r\n            T.FirstName AS CustomersinPastY" +
                    "ear_FirstName, \r\n            T.LastName AS CustomersinPastYear_LastName, \r\n     " +
                    "       T.Title AS CustomersinPastYear_Title, \r\n            T.AddDate AS Customer" +
                    "sinPastYear_AddDate, \r\n            T.ModifiedDate AS CustomersinPastYear_Modifie" +
                    "dDate, \r\n            True AS _from0\r\n        FROM BreakAwayModelStoreContainer.C" +
                    "ustomersinPastYear AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.vOfficeAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.vOfficeAddresses", @"
    SELECT VALUE -- Constructing vOfficeAddresses
        [BreakAwayModel.Store.vOfficeAddresses](T1.vOfficeAddresses_FirstName, T1.vOfficeAddresses_LastName, T1.vOfficeAddresses_addressID, T1.vOfficeAddresses_Street1, T1.vOfficeAddresses_Street2, T1.vOfficeAddresses_City, T1.vOfficeAddresses_StateProvince, T1.vOfficeAddresses_CountryRegion, T1.vOfficeAddresses_PostalCode, T1.vOfficeAddresses_AddressType, T1.vOfficeAddresses_ContactID, T1.vOfficeAddresses_ModifiedDate)
    FROM (
        SELECT 
            T.FirstName AS vOfficeAddresses_FirstName, 
            T.LastName AS vOfficeAddresses_LastName, 
            T.addressID AS vOfficeAddresses_addressID, 
            T.Street1 AS vOfficeAddresses_Street1, 
            T.Street2 AS vOfficeAddresses_Street2, 
            T.City AS vOfficeAddresses_City, 
            T.StateProvince AS vOfficeAddresses_StateProvince, 
            T.CountryRegion AS vOfficeAddresses_CountryRegion, 
            T.PostalCode AS vOfficeAddresses_PostalCode, 
            T.AddressType AS vOfficeAddresses_AddressType, 
            T.ContactID AS vOfficeAddresses_ContactID, 
            T.ModifiedDate AS vOfficeAddresses_ModifiedDate, 
            True AS _from0
        FROM BAPOCOs.vOfficeAddresses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.vOfficeAddresses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.vOfficeAddresses", @"
    SELECT VALUE -- Constructing vOfficeAddresses
        [BAPOCOModel.vOfficeAddress](T1.vOfficeAddress_FirstName, T1.vOfficeAddress_LastName, T1.vOfficeAddress_addressID, T1.vOfficeAddress_Street1, T1.vOfficeAddress_Street2, T1.vOfficeAddress_City, T1.vOfficeAddress_StateProvince, T1.vOfficeAddress_CountryRegion, T1.vOfficeAddress_PostalCode, T1.vOfficeAddress_AddressType, T1.vOfficeAddress_ContactID, T1.vOfficeAddress_ModifiedDate)
    FROM (
        SELECT 
            T.FirstName AS vOfficeAddress_FirstName, 
            T.LastName AS vOfficeAddress_LastName, 
            T.addressID AS vOfficeAddress_addressID, 
            T.Street1 AS vOfficeAddress_Street1, 
            T.Street2 AS vOfficeAddress_Street2, 
            T.City AS vOfficeAddress_City, 
            T.StateProvince AS vOfficeAddress_StateProvince, 
            T.CountryRegion AS vOfficeAddress_CountryRegion, 
            T.PostalCode AS vOfficeAddress_PostalCode, 
            T.AddressType AS vOfficeAddress_AddressType, 
            T.ContactID AS vOfficeAddress_ContactID, 
            T.ModifiedDate AS vOfficeAddress_ModifiedDate, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.vOfficeAddresses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.vPaymentsforPeriod
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.vPaymentsforPeriod", @"
    SELECT VALUE -- Constructing vPaymentsforPeriod
        [BreakAwayModel.Store.vPaymentsforPeriod](T1.vPaymentsforPeriod_PaymentDate, T1.vPaymentsforPeriod_Amount, T1.vPaymentsforPeriod_ReservationDate, T1.vPaymentsforPeriod_FirstName, T1.vPaymentsforPeriod_LastName, T1.vPaymentsforPeriod_StartDate, T1.vPaymentsforPeriod_EndDate, T1.vPaymentsforPeriod_LocationName)
    FROM (
        SELECT 
            T.PaymentDate AS vPaymentsforPeriod_PaymentDate, 
            T.Amount AS vPaymentsforPeriod_Amount, 
            T.ReservationDate AS vPaymentsforPeriod_ReservationDate, 
            T.FirstName AS vPaymentsforPeriod_FirstName, 
            T.LastName AS vPaymentsforPeriod_LastName, 
            T.StartDate AS vPaymentsforPeriod_StartDate, 
            T.EndDate AS vPaymentsforPeriod_EndDate, 
            T.LocationName AS vPaymentsforPeriod_LocationName, 
            True AS _from0
        FROM BAPOCOs.vPaymentsforPeriods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.vPaymentsforPeriods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.vPaymentsforPeriods", @"
    SELECT VALUE -- Constructing vPaymentsforPeriods
        [BAPOCOModel.vPaymentsforPeriod](T1.vPaymentsforPeriod_PaymentDate, T1.vPaymentsforPeriod_Amount, T1.vPaymentsforPeriod_ReservationDate, T1.vPaymentsforPeriod_FirstName, T1.vPaymentsforPeriod_LastName, T1.vPaymentsforPeriod_StartDate, T1.vPaymentsforPeriod_EndDate, T1.vPaymentsforPeriod_LocationName)
    FROM (
        SELECT 
            T.PaymentDate AS vPaymentsforPeriod_PaymentDate, 
            T.Amount AS vPaymentsforPeriod_Amount, 
            T.ReservationDate AS vPaymentsforPeriod_ReservationDate, 
            T.FirstName AS vPaymentsforPeriod_FirstName, 
            T.LastName AS vPaymentsforPeriod_LastName, 
            T.StartDate AS vPaymentsforPeriod_StartDate, 
            T.EndDate AS vPaymentsforPeriod_EndDate, 
            T.LocationName AS vPaymentsforPeriod_LocationName, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.vPaymentsforPeriod AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BreakAwayModelStoreContainer.UpcomingTripParticipants
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BreakAwayModelStoreContainer.UpcomingTripParticipants", @"
    SELECT VALUE -- Constructing UpcomingTripParticipants
        [BreakAwayModel.Store.UpcomingTripParticipant](T1.UpcomingTripParticipant_ContactID, T1.UpcomingTripParticipant_TripID, T1.UpcomingTripParticipant_StartDate, T1.UpcomingTripParticipant_Name, T1.UpcomingTripParticipant_Destination)
    FROM (
        SELECT 
            T.ContactID AS UpcomingTripParticipant_ContactID, 
            T.TripID AS UpcomingTripParticipant_TripID, 
            T.StartDate AS UpcomingTripParticipant_StartDate, 
            T.Name AS UpcomingTripParticipant_Name, 
            T.Destination AS UpcomingTripParticipant_Destination, 
            True AS _from0
        FROM BAPOCOs.UpcomingTripParticipants AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BAPOCOs.UpcomingTripParticipants
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BAPOCOs.UpcomingTripParticipants", @"
    SELECT VALUE -- Constructing UpcomingTripParticipants
        [BAPOCOModel.UpcomingTripParticipant](T1.UpcomingTripParticipant_ContactID, T1.UpcomingTripParticipant_TripID, T1.UpcomingTripParticipant_StartDate, T1.UpcomingTripParticipant_Name, T1.UpcomingTripParticipant_Destination)
    FROM (
        SELECT 
            T.ContactID AS UpcomingTripParticipant_ContactID, 
            T.TripID AS UpcomingTripParticipant_TripID, 
            T.StartDate AS UpcomingTripParticipant_StartDate, 
            T.Name AS UpcomingTripParticipant_Name, 
            T.Destination AS UpcomingTripParticipant_Destination, 
            True AS _from0
        FROM BreakAwayModelStoreContainer.UpcomingTripParticipants AS T
    ) AS T1");
        }
    }
}
