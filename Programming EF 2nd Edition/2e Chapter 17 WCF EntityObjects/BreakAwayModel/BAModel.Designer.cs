//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BAModel", "FK_Customers_Activities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Activity), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Customer), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Customers_Activities1", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Activity), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Customer), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Lodging_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Contact), "Lodging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Lodging), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Customers_CustomerTypes", "CustomerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.CustomerType), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Customer), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Customers_Locations", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Destination), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Customer), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Customers_Locations1", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Destination), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Customer), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Reservations_Customers", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Customer), "Reservations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Reservation), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Events_Locations", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Destination), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Trip), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Events_Lodging", "Lodging", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Lodging), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Trip), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_OldReservations_Events", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Trip), "Reservations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Reservation), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Lodging_Locations", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAGA.Destination), "Lodging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Lodging), true)]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Payments_Reservations", "Reservations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Reservation), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Payment), true)]
[assembly: EdmRelationshipAttribute("BAModel", "ActivityEquipment", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Activity), "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Equipment))]
[assembly: EdmRelationshipAttribute("BAModel", "EventActivities", "Activities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Activity), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Trip))]
[assembly: EdmRelationshipAttribute("BAModel", "FK_Address_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Contact), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.Address), true)]
[assembly: EdmRelationshipAttribute("BAModel", "CustomerUpcomingTripParticipant", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAGA.Customer), "UpcomingTripParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAGA.UpcomingTripParticipant), true)]

#endregion

namespace BAGA
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BAEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BAEntities object using the connection string found in the 'BAEntities' section of the application configuration file.
        /// </summary>
        public BAEntities() : base("name=BAEntities", "BAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BAEntities object.
        /// </summary>
        public BAEntities(string connectionString) : base(connectionString, "BAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BAEntities object.
        /// </summary>
        public BAEntities(EntityConnection connection) : base(connection, "BAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerType> CustomerTypes
        {
            get
            {
                if ((_CustomerTypes == null))
                {
                    _CustomerTypes = base.CreateObjectSet<CustomerType>("CustomerTypes");
                }
                return _CustomerTypes;
            }
        }
        private ObjectSet<CustomerType> _CustomerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment> EquipmentSet
        {
            get
            {
                if ((_EquipmentSet == null))
                {
                    _EquipmentSet = base.CreateObjectSet<Equipment>("EquipmentSet");
                }
                return _EquipmentSet;
            }
        }
        private ObjectSet<Equipment> _EquipmentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trip> Trips
        {
            get
            {
                if ((_Trips == null))
                {
                    _Trips = base.CreateObjectSet<Trip>("Trips");
                }
                return _Trips;
            }
        }
        private ObjectSet<Trip> _Trips;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Destination> Destinations
        {
            get
            {
                if ((_Destinations == null))
                {
                    _Destinations = base.CreateObjectSet<Destination>("Destinations");
                }
                return _Destinations;
            }
        }
        private ObjectSet<Destination> _Destinations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lodging> Lodgings
        {
            get
            {
                if ((_Lodgings == null))
                {
                    _Lodgings = base.CreateObjectSet<Lodging>("Lodgings");
                }
                return _Lodgings;
            }
        }
        private ObjectSet<Lodging> _Lodgings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservation> Reservations
        {
            get
            {
                if ((_Reservations == null))
                {
                    _Reservations = base.CreateObjectSet<Reservation>("Reservations");
                }
                return _Reservations;
            }
        }
        private ObjectSet<Reservation> _Reservations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomersinPastYear> CustomersinPastYears
        {
            get
            {
                if ((_CustomersinPastYears == null))
                {
                    _CustomersinPastYears = base.CreateObjectSet<CustomersinPastYear>("CustomersinPastYears");
                }
                return _CustomersinPastYears;
            }
        }
        private ObjectSet<CustomersinPastYear> _CustomersinPastYears;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vOfficeAddress> vOfficeAddresses
        {
            get
            {
                if ((_vOfficeAddresses == null))
                {
                    _vOfficeAddresses = base.CreateObjectSet<vOfficeAddress>("vOfficeAddresses");
                }
                return _vOfficeAddresses;
            }
        }
        private ObjectSet<vOfficeAddress> _vOfficeAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vPaymentsforPeriod> vPaymentsforPeriods
        {
            get
            {
                if ((_vPaymentsforPeriods == null))
                {
                    _vPaymentsforPeriods = base.CreateObjectSet<vPaymentsforPeriod>("vPaymentsforPeriods");
                }
                return _vPaymentsforPeriods;
            }
        }
        private ObjectSet<vPaymentsforPeriod> _vPaymentsforPeriods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UpcomingTripParticipant> UpcomingTripParticipants
        {
            get
            {
                if ((_UpcomingTripParticipants == null))
                {
                    _UpcomingTripParticipants = base.CreateObjectSet<UpcomingTripParticipant>("UpcomingTripParticipants");
                }
                return _UpcomingTripParticipants;
            }
        }
        private ObjectSet<UpcomingTripParticipant> _UpcomingTripParticipants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerNameAndID> CustomerNameAndIDs
        {
            get
            {
                if ((_CustomerNameAndIDs == null))
                {
                    _CustomerNameAndIDs = base.CreateObjectSet<CustomerNameAndID>("CustomerNameAndIDs");
                }
                return _CustomerNameAndIDs;
            }
        }
        private ObjectSet<CustomerNameAndID> _CustomerNameAndIDs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerTypes(CustomerType customerType)
        {
            base.AddObject("CustomerTypes", customerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentSet(Equipment equipment)
        {
            base.AddObject("EquipmentSet", equipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trips EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrips(Trip trip)
        {
            base.AddObject("Trips", trip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Destinations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDestinations(Destination destination)
        {
            base.AddObject("Destinations", destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lodgings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLodgings(Lodging lodging)
        {
            base.AddObject("Lodgings", lodging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservations(Reservation reservation)
        {
            base.AddObject("Reservations", reservation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomersinPastYears EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomersinPastYears(CustomersinPastYear customersinPastYear)
        {
            base.AddObject("CustomersinPastYears", customersinPastYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vOfficeAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovOfficeAddresses(vOfficeAddress vOfficeAddress)
        {
            base.AddObject("vOfficeAddresses", vOfficeAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vPaymentsforPeriods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovPaymentsforPeriods(vPaymentsforPeriod vPaymentsforPeriod)
        {
            base.AddObject("vPaymentsforPeriods", vPaymentsforPeriod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UpcomingTripParticipants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUpcomingTripParticipants(UpcomingTripParticipant upcomingTripParticipant)
        {
            base.AddObject("UpcomingTripParticipants", upcomingTripParticipant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerNameAndIDs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerNameAndIDs(CustomerNameAndID customerNameAndID)
        {
            base.AddObject("CustomerNameAndIDs", customerNameAndID);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="contactID">No Metadata Documentation available.</param>
        public ObjectResult<TripPayment> PaymentsforContact(Nullable<global::System.Int32> contactID)
        {
            ObjectParameter contactIDParameter;
            if (contactID.HasValue)
            {
                contactIDParameter = new ObjectParameter("ContactID", contactID);
            }
            else
            {
                contactIDParameter = new ObjectParameter("ContactID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<TripPayment>("PaymentsforContact", contactIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="contactID">No Metadata Documentation available.</param>
        public ObjectResult<Customer> CreateCustomerfromContact(Nullable<global::System.Int32> contactID)
        {
            ObjectParameter contactIDParameter;
            if (contactID.HasValue)
            {
                contactIDParameter = new ObjectParameter("contactID", contactID);
            }
            else
            {
                contactIDParameter = new ObjectParameter("contactID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Customer>("CreateCustomerfromContact", contactIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="contactID">No Metadata Documentation available.</param>
        public ObjectResult<Customer> CreateCustomerfromContact(Nullable<global::System.Int32> contactID, MergeOption mergeOption)
        {
            ObjectParameter contactIDParameter;
            if (contactID.HasValue)
            {
                contactIDParameter = new ObjectParameter("contactID", contactID);
            }
            else
            {
                contactIDParameter = new ObjectParameter("contactID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Customer>("CreateCustomerfromContact", mergeOption, contactIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="activityID">Initial value of the ActivityID property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        public static Activity CreateActivity(global::System.Int32 activityID, global::System.String category)
        {
            Activity activity = new Activity();
            activity.ActivityID = activityID;
            activity.Category = category;
            return activity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityID
        {
            get
            {
                return _ActivityID;
            }
            set
            {
                if (_ActivityID != value)
                {
                    OnActivityIDChanging(value);
                    ReportPropertyChanging("ActivityID");
                    _ActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityID");
                    OnActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityID;
        partial void OnActivityIDChanging(global::System.Int32 value);
        partial void OnActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String imagepath
        {
            get
            {
                return _imagepath;
            }
            set
            {
                OnimagepathChanging(value);
                ReportPropertyChanging("imagepath");
                _imagepath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("imagepath");
                OnimagepathChanged();
            }
        }
        private global::System.String _imagepath;
        partial void OnimagepathChanging(global::System.String value);
        partial void OnimagepathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Activities", "Customers")]
        public EntityCollection<Customer> PrimaryPrefCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("BAModel.FK_Customers_Activities", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("BAModel.FK_Customers_Activities", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Activities1", "Customers")]
        public EntityCollection<Customer> SecondaryPrefCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("BAModel.FK_Customers_Activities1", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("BAModel.FK_Customers_Activities1", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "ActivityEquipment", "Equipment")]
        public EntityCollection<Equipment> Equipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipment>("BAModel.ActivityEquipment", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipment>("BAModel.ActivityEquipment", "Equipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "EventActivities", "Events")]
        public EntityCollection<Trip> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("BAModel.EventActivities", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("BAModel.EventActivities", "Events", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the addressID property.</param>
        /// <param name="addressType">Initial value of the AddressType property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.String addressType, global::System.Int32 contactID, global::System.DateTime modifiedDate, global::System.Byte[] rowVersion)
        {
            Address address = new Address();
            address.addressID = addressID;
            address.AddressType = addressType;
            address.ContactID = contactID;
            address.ModifiedDate = modifiedDate;
            address.RowVersion = rowVersion;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 addressID
        {
            get
            {
                return _addressID;
            }
            set
            {
                if (_addressID != value)
                {
                    OnaddressIDChanging(value);
                    ReportPropertyChanging("addressID");
                    _addressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("addressID");
                    OnaddressIDChanged();
                }
            }
        }
        private global::System.Int32 _addressID;
        partial void OnaddressIDChanging(global::System.Int32 value);
        partial void OnaddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryRegion
        {
            get
            {
                return _CountryRegion;
            }
            set
            {
                OnCountryRegionChanging(value);
                ReportPropertyChanging("CountryRegion");
                _CountryRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryRegion");
                OnCountryRegionChanged();
            }
        }
        private global::System.String _CountryRegion;
        partial void OnCountryRegionChanging(global::System.String value);
        partial void OnCountryRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressType
        {
            get
            {
                return _AddressType;
            }
            set
            {
                OnAddressTypeChanging(value);
                ReportPropertyChanging("AddressType");
                _AddressType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressType");
                OnAddressTypeChanged();
            }
        }
        private global::System.String _AddressType;
        partial void OnAddressTypeChanging(global::System.String value);
        partial void OnAddressTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street1
        {
            get
            {
                return _Street1;
            }
            set
            {
                OnStreet1Changing(value);
                ReportPropertyChanging("Street1");
                _Street1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street1");
                OnStreet1Changed();
            }
        }
        private global::System.String _Street1;
        partial void OnStreet1Changing(global::System.String value);
        partial void OnStreet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street2
        {
            get
            {
                return _Street2;
            }
            set
            {
                OnStreet2Changing(value);
                ReportPropertyChanging("Street2");
                _Street2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street2");
                OnStreet2Changed();
            }
        }
        private global::System.String _Street2;
        partial void OnStreet2Changing(global::System.String value);
        partial void OnStreet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Address_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Address_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Address_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Address_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("BAModel.FK_Address_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Customer))]
    [KnownTypeAttribute(typeof(NonCustomer))]
    public abstract partial class Contact : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName = "George";
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDate
        {
            get
            {
                return _AddDate;
            }
            set
            {
                OnAddDateChanging(value);
                ReportPropertyChanging("AddDate");
                _AddDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDate");
                OnAddDateChanged();
            }
        }
        private global::System.DateTime _AddDate;
        partial void OnAddDateChanging(global::System.DateTime value);
        partial void OnAddDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Lodging_Contact", "Lodging")]
        public EntityCollection<Lodging> Lodgings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lodging>("BAModel.FK_Lodging_Contact", "Lodging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lodging>("BAModel.FK_Lodging_Contact", "Lodging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Address_Contact", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("BAModel.FK_Address_Contact", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("BAModel.FK_Address_Contact", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : Contact
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addDate">Initial value of the AddDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="custRowVersion">Initial value of the CustRowVersion property.</param>
        public static Customer CreateCustomer(global::System.Int32 contactID, global::System.String lastName, global::System.DateTime addDate, global::System.DateTime modifiedDate, global::System.Byte[] rowVersion, global::System.Byte[] custRowVersion)
        {
            Customer customer = new Customer();
            customer.ContactID = contactID;
            customer.LastName = lastName;
            customer.AddDate = addDate;
            customer.ModifiedDate = modifiedDate;
            customer.RowVersion = rowVersion;
            customer.CustRowVersion = custRowVersion;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerTypeID
        {
            get
            {
                return _CustomerTypeID;
            }
            set
            {
                OnCustomerTypeIDChanging(value);
                ReportPropertyChanging("CustomerTypeID");
                _CustomerTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerTypeID");
                OnCustomerTypeIDChanged();
            }
        }
        private global::System.Int32 _CustomerTypeID = 1;
        partial void OnCustomerTypeIDChanging(global::System.Int32 value);
        partial void OnCustomerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InitialDate
        {
            get
            {
                return _InitialDate;
            }
            set
            {
                OnInitialDateChanging(value);
                ReportPropertyChanging("InitialDate");
                _InitialDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InitialDate");
                OnInitialDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InitialDate;
        partial void OnInitialDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInitialDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryDestinationID
        {
            get
            {
                return _PrimaryDestinationID;
            }
            set
            {
                OnPrimaryDestinationIDChanging(value);
                ReportPropertyChanging("PrimaryDestinationID");
                _PrimaryDestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryDestinationID");
                OnPrimaryDestinationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryDestinationID;
        partial void OnPrimaryDestinationIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryDestinationID
        {
            get
            {
                return _SecondaryDestinationID;
            }
            set
            {
                OnSecondaryDestinationIDChanging(value);
                ReportPropertyChanging("SecondaryDestinationID");
                _SecondaryDestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryDestinationID");
                OnSecondaryDestinationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryDestinationID;
        partial void OnSecondaryDestinationIDChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryActivityID
        {
            get
            {
                return _PrimaryActivityID;
            }
            set
            {
                OnPrimaryActivityIDChanging(value);
                ReportPropertyChanging("PrimaryActivityID");
                _PrimaryActivityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryActivityID");
                OnPrimaryActivityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryActivityID;
        partial void OnPrimaryActivityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryActivityID
        {
            get
            {
                return _SecondaryActivityID;
            }
            set
            {
                OnSecondaryActivityIDChanging(value);
                ReportPropertyChanging("SecondaryActivityID");
                _SecondaryActivityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryActivityID");
                OnSecondaryActivityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryActivityID;
        partial void OnSecondaryActivityIDChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeightInches
        {
            get
            {
                return _HeightInches;
            }
            set
            {
                OnHeightInchesChanging(value);
                ReportPropertyChanging("HeightInches");
                _HeightInches = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeightInches");
                OnHeightInchesChanged();
            }
        }
        private Nullable<global::System.Int32> _HeightInches;
        partial void OnHeightInchesChanging(Nullable<global::System.Int32> value);
        partial void OnHeightInchesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeightPounds
        {
            get
            {
                return _WeightPounds;
            }
            set
            {
                OnWeightPoundsChanging(value);
                ReportPropertyChanging("WeightPounds");
                _WeightPounds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightPounds");
                OnWeightPoundsChanged();
            }
        }
        private Nullable<global::System.Int32> _WeightPounds;
        partial void OnWeightPoundsChanging(Nullable<global::System.Int32> value);
        partial void OnWeightPoundsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DietaryRestrictions
        {
            get
            {
                return _DietaryRestrictions;
            }
            set
            {
                OnDietaryRestrictionsChanging(value);
                ReportPropertyChanging("DietaryRestrictions");
                _DietaryRestrictions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DietaryRestrictions");
                OnDietaryRestrictionsChanged();
            }
        }
        private global::System.String _DietaryRestrictions;
        partial void OnDietaryRestrictionsChanging(global::System.String value);
        partial void OnDietaryRestrictionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CustRowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CustRowVersion);
            }
            set
            {
                OnCustRowVersionChanging(value);
                ReportPropertyChanging("CustRowVersion");
                _CustRowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustRowVersion");
                OnCustRowVersionChanged();
            }
        }
        private global::System.Byte[] _CustRowVersion;
        partial void OnCustRowVersionChanging(global::System.Byte[] value);
        partial void OnCustRowVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Activities", "Activities")]
        public Activity PrimaryActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> PrimaryActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("BAModel.FK_Customers_Activities", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Activities1", "Activities")]
        public Activity SecondaryActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities1", "Activities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities1", "Activities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> SecondaryActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BAModel.FK_Customers_Activities1", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("BAModel.FK_Customers_Activities1", "Activities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_CustomerTypes", "CustomerTypes")]
        public CustomerType CustomerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("BAModel.FK_Customers_CustomerTypes", "CustomerTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("BAModel.FK_Customers_CustomerTypes", "CustomerTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerType> CustomerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("BAModel.FK_Customers_CustomerTypes", "CustomerTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerType>("BAModel.FK_Customers_CustomerTypes", "CustomerTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Locations", "Locations")]
        public Destination PrimaryDestination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> PrimaryDestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("BAModel.FK_Customers_Locations", "Locations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Locations1", "Locations")]
        public Destination SecondaryDestination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations1", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations1", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> SecondaryDestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Customers_Locations1", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("BAModel.FK_Customers_Locations1", "Locations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Reservations_Customers", "Reservations")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("BAModel.FK_Reservations_Customers", "Reservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("BAModel.FK_Reservations_Customers", "Reservations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="CustomerNameAndID")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerNameAndID : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerNameAndID object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static CustomerNameAndID CreateCustomerNameAndID(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            CustomerNameAndID customerNameAndID = new CustomerNameAndID();
            customerNameAndID.Id = id;
            customerNameAndID.FirstName = firstName;
            customerNameAndID.LastName = lastName;
            return customerNameAndID;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="CustomersinPastYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomersinPastYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomersinPastYear object.
        /// </summary>
        /// <param name="cOntactID">Initial value of the COntactID property.</param>
        /// <param name="customerTypeID">Initial value of the CustomerTypeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addDate">Initial value of the AddDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CustomersinPastYear CreateCustomersinPastYear(global::System.Int32 cOntactID, global::System.Int32 customerTypeID, global::System.String firstName, global::System.String lastName, global::System.DateTime addDate, global::System.DateTime modifiedDate)
        {
            CustomersinPastYear customersinPastYear = new CustomersinPastYear();
            customersinPastYear.COntactID = cOntactID;
            customersinPastYear.CustomerTypeID = customerTypeID;
            customersinPastYear.FirstName = firstName;
            customersinPastYear.LastName = lastName;
            customersinPastYear.AddDate = addDate;
            customersinPastYear.ModifiedDate = modifiedDate;
            return customersinPastYear;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 COntactID
        {
            get
            {
                return _COntactID;
            }
            set
            {
                if (_COntactID != value)
                {
                    OnCOntactIDChanging(value);
                    ReportPropertyChanging("COntactID");
                    _COntactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("COntactID");
                    OnCOntactIDChanged();
                }
            }
        }
        private global::System.Int32 _COntactID;
        partial void OnCOntactIDChanging(global::System.Int32 value);
        partial void OnCOntactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryDesintation
        {
            get
            {
                return _PrimaryDesintation;
            }
            set
            {
                OnPrimaryDesintationChanging(value);
                ReportPropertyChanging("PrimaryDesintation");
                _PrimaryDesintation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryDesintation");
                OnPrimaryDesintationChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryDesintation;
        partial void OnPrimaryDesintationChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryDesintationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerTypeID
        {
            get
            {
                return _CustomerTypeID;
            }
            set
            {
                if (_CustomerTypeID != value)
                {
                    OnCustomerTypeIDChanging(value);
                    ReportPropertyChanging("CustomerTypeID");
                    _CustomerTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerTypeID");
                    OnCustomerTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerTypeID;
        partial void OnCustomerTypeIDChanging(global::System.Int32 value);
        partial void OnCustomerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InitialDate
        {
            get
            {
                return _InitialDate;
            }
            set
            {
                OnInitialDateChanging(value);
                ReportPropertyChanging("InitialDate");
                _InitialDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InitialDate");
                OnInitialDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InitialDate;
        partial void OnInitialDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInitialDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryDestination
        {
            get
            {
                return _SecondaryDestination;
            }
            set
            {
                OnSecondaryDestinationChanging(value);
                ReportPropertyChanging("SecondaryDestination");
                _SecondaryDestination = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryDestination");
                OnSecondaryDestinationChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryDestination;
        partial void OnSecondaryDestinationChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryActivity
        {
            get
            {
                return _PrimaryActivity;
            }
            set
            {
                OnPrimaryActivityChanging(value);
                ReportPropertyChanging("PrimaryActivity");
                _PrimaryActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryActivity");
                OnPrimaryActivityChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryActivity;
        partial void OnPrimaryActivityChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryActivity
        {
            get
            {
                return _SecondaryActivity;
            }
            set
            {
                OnSecondaryActivityChanging(value);
                ReportPropertyChanging("SecondaryActivity");
                _SecondaryActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecondaryActivity");
                OnSecondaryActivityChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryActivity;
        partial void OnSecondaryActivityChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDate
        {
            get
            {
                return _AddDate;
            }
            set
            {
                if (_AddDate != value)
                {
                    OnAddDateChanging(value);
                    ReportPropertyChanging("AddDate");
                    _AddDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddDate");
                    OnAddDateChanged();
                }
            }
        }
        private global::System.DateTime _AddDate;
        partial void OnAddDateChanging(global::System.DateTime value);
        partial void OnAddDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                if (_ModifiedDate != value)
                {
                    OnModifiedDateChanging(value);
                    ReportPropertyChanging("ModifiedDate");
                    _ModifiedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedDate");
                    OnModifiedDateChanged();
                }
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="CustomerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerType object.
        /// </summary>
        /// <param name="customerTypeID">Initial value of the CustomerTypeID property.</param>
        public static CustomerType CreateCustomerType(global::System.Int32 customerTypeID)
        {
            CustomerType customerType = new CustomerType();
            customerType.CustomerTypeID = customerTypeID;
            return customerType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerTypeID
        {
            get
            {
                return _CustomerTypeID;
            }
            set
            {
                if (_CustomerTypeID != value)
                {
                    OnCustomerTypeIDChanging(value);
                    ReportPropertyChanging("CustomerTypeID");
                    _CustomerTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerTypeID");
                    OnCustomerTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerTypeID;
        partial void OnCustomerTypeIDChanging(global::System.Int32 value);
        partial void OnCustomerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_CustomerTypes", "Customers")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("BAModel.FK_Customers_CustomerTypes", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("BAModel.FK_Customers_CustomerTypes", "Customers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Destination object.
        /// </summary>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Destination CreateDestination(global::System.Int32 destinationID, global::System.String name)
        {
            Destination destination = new Destination();
            destination.DestinationID = destinationID;
            destination.Name = name;
            return destination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                if (_DestinationID != value)
                {
                    OnDestinationIDChanging(value);
                    ReportPropertyChanging("DestinationID");
                    _DestinationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DestinationID");
                    OnDestinationIDChanged();
                }
            }
        }
        private global::System.Int32 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int32 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Locations", "Customers")]
        public EntityCollection<Customer> PrimaryPrefCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("BAModel.FK_Customers_Locations", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("BAModel.FK_Customers_Locations", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Customers_Locations1", "Customers")]
        public EntityCollection<Customer> SecondaryPrefCustomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("BAModel.FK_Customers_Locations1", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("BAModel.FK_Customers_Locations1", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Events_Locations", "Events")]
        public EntityCollection<Trip> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("BAModel.FK_Events_Locations", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("BAModel.FK_Events_Locations", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Lodging_Locations", "Lodging")]
        public EntityCollection<Lodging> Lodgings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lodging>("BAModel.FK_Lodging_Locations", "Lodging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lodging>("BAModel.FK_Lodging_Locations", "Lodging", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Equipment CreateEquipment(global::System.Int32 equipmentID, global::System.String name)
        {
            Equipment equipment = new Equipment();
            equipment.EquipmentID = equipmentID;
            equipment.Name = name;
            return equipment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                if (_EquipmentID != value)
                {
                    OnEquipmentIDChanging(value);
                    ReportPropertyChanging("EquipmentID");
                    _EquipmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentID");
                    OnEquipmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "ActivityEquipment", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("BAModel.ActivityEquipment", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("BAModel.ActivityEquipment", "Activities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Lodging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Resort))]
    public partial class Lodging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lodging object.
        /// </summary>
        /// <param name="lodgingID">Initial value of the LodgingID property.</param>
        /// <param name="lodgingName">Initial value of the LodgingName property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static Lodging CreateLodging(global::System.Int32 lodgingID, global::System.String lodgingName, global::System.Int32 contactID)
        {
            Lodging lodging = new Lodging();
            lodging.LodgingID = lodgingID;
            lodging.LodgingName = lodgingName;
            lodging.ContactID = contactID;
            return lodging;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LodgingID
        {
            get
            {
                return _LodgingID;
            }
            set
            {
                if (_LodgingID != value)
                {
                    OnLodgingIDChanging(value);
                    ReportPropertyChanging("LodgingID");
                    _LodgingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LodgingID");
                    OnLodgingIDChanged();
                }
            }
        }
        private global::System.Int32 _LodgingID;
        partial void OnLodgingIDChanging(global::System.Int32 value);
        partial void OnLodgingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LodgingName
        {
            get
            {
                return _LodgingName;
            }
            set
            {
                OnLodgingNameChanging(value);
                ReportPropertyChanging("LodgingName");
                _LodgingName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LodgingName");
                OnLodgingNameChanged();
            }
        }
        private global::System.String _LodgingName;
        partial void OnLodgingNameChanging(global::System.String value);
        partial void OnLodgingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                OnDestinationIDChanging(value);
                ReportPropertyChanging("DestinationID");
                _DestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationID");
                OnDestinationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DestinationID;
        partial void OnDestinationIDChanging(Nullable<global::System.Int32> value);
        partial void OnDestinationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Lodging_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Lodging_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Lodging_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BAModel.FK_Lodging_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("BAModel.FK_Lodging_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Events_Lodging", "Events")]
        public EntityCollection<Trip> Trips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trip>("BAModel.FK_Events_Lodging", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trip>("BAModel.FK_Events_Lodging", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Lodging_Locations", "Locations")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Lodging_Locations", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Lodging_Locations", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Lodging_Locations", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("BAModel.FK_Lodging_Locations", "Locations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="NonCustomer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NonCustomer : Contact
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NonCustomer object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addDate">Initial value of the AddDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static NonCustomer CreateNonCustomer(global::System.Int32 contactID, global::System.String lastName, global::System.DateTime addDate, global::System.DateTime modifiedDate, global::System.Byte[] rowVersion)
        {
            NonCustomer nonCustomer = new NonCustomer();
            nonCustomer.ContactID = contactID;
            nonCustomer.LastName = lastName;
            nonCustomer.AddDate = addDate;
            nonCustomer.ModifiedDate = modifiedDate;
            nonCustomer.RowVersion = rowVersion;
            return nonCustomer;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="OldReservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OldReservation : Reservation
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OldReservation object.
        /// </summary>
        /// <param name="reservationID">Initial value of the ReservationID property.</param>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static OldReservation CreateOldReservation(global::System.Int32 reservationID, global::System.DateTime reservationDate, global::System.Int32 contactID, global::System.Byte[] rowVersion)
        {
            OldReservation oldReservation = new OldReservation();
            oldReservation.ReservationID = reservationID;
            oldReservation.ReservationDate = reservationDate;
            oldReservation.ContactID = contactID;
            oldReservation.RowVersion = rowVersion;
            return oldReservation;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="paymentID">Initial value of the PaymentID property.</param>
        /// <param name="reservationID">Initial value of the ReservationID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Payment CreatePayment(global::System.Int32 paymentID, global::System.Int32 reservationID, global::System.DateTime modifiedDate, global::System.Byte[] rowVersion)
        {
            Payment payment = new Payment();
            payment.PaymentID = paymentID;
            payment.ReservationID = reservationID;
            payment.ModifiedDate = modifiedDate;
            payment.RowVersion = rowVersion;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                if (_PaymentID != value)
                {
                    OnPaymentIDChanging(value);
                    ReportPropertyChanging("PaymentID");
                    _PaymentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentID");
                    OnPaymentIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentID;
        partial void OnPaymentIDChanging(global::System.Int32 value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReservationID
        {
            get
            {
                return _ReservationID;
            }
            set
            {
                OnReservationIDChanging(value);
                ReportPropertyChanging("ReservationID");
                _ReservationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservationID");
                OnReservationIDChanged();
            }
        }
        private global::System.Int32 _ReservationID;
        partial void OnReservationIDChanging(global::System.Int32 value);
        partial void OnReservationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Payments_Reservations", "Reservations")]
        public Reservation Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("BAModel.FK_Payments_Reservations", "Reservations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("BAModel.FK_Payments_Reservations", "Reservations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reservation> ReservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("BAModel.FK_Payments_Reservations", "Reservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reservation>("BAModel.FK_Payments_Reservations", "Reservations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(OldReservation))]
    public partial class Reservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservation object.
        /// </summary>
        /// <param name="reservationID">Initial value of the ReservationID property.</param>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static Reservation CreateReservation(global::System.Int32 reservationID, global::System.DateTime reservationDate, global::System.Int32 contactID, global::System.Byte[] rowVersion)
        {
            Reservation reservation = new Reservation();
            reservation.ReservationID = reservationID;
            reservation.ReservationDate = reservationDate;
            reservation.ContactID = contactID;
            reservation.RowVersion = rowVersion;
            return reservation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReservationID
        {
            get
            {
                return _ReservationID;
            }
            set
            {
                if (_ReservationID != value)
                {
                    OnReservationIDChanging(value);
                    ReportPropertyChanging("ReservationID");
                    _ReservationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReservationID");
                    OnReservationIDChanged();
                }
            }
        }
        private global::System.Int32 _ReservationID;
        partial void OnReservationIDChanging(global::System.Int32 value);
        partial void OnReservationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservationDate
        {
            get
            {
                return _ReservationDate;
            }
            set
            {
                OnReservationDateChanging(value);
                ReportPropertyChanging("ReservationDate");
                _ReservationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservationDate");
                OnReservationDateChanged();
            }
        }
        private global::System.DateTime _ReservationDate;
        partial void OnReservationDateChanging(global::System.DateTime value);
        partial void OnReservationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                OnTripIDChanging(value);
                ReportPropertyChanging("TripID");
                _TripID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripID");
                OnTripIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TripID;
        partial void OnTripIDChanging(Nullable<global::System.Int32> value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Reservations_Customers", "Customers")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.FK_Reservations_Customers", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.FK_Reservations_Customers", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.FK_Reservations_Customers", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("BAModel.FK_Reservations_Customers", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_OldReservations_Events", "Events")]
        public Trip Trip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("BAModel.FK_OldReservations_Events", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("BAModel.FK_OldReservations_Events", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Trip> TripReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Trip>("BAModel.FK_OldReservations_Events", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Trip>("BAModel.FK_OldReservations_Events", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Payments_Reservations", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("BAModel.FK_Payments_Reservations", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("BAModel.FK_Payments_Reservations", "Payments", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Resort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resort : Lodging
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resort object.
        /// </summary>
        /// <param name="lodgingID">Initial value of the LodgingID property.</param>
        /// <param name="lodgingName">Initial value of the LodgingName property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="luxuryResort">Initial value of the LuxuryResort property.</param>
        public static Resort CreateResort(global::System.Int32 lodgingID, global::System.String lodgingName, global::System.Int32 contactID, global::System.Boolean luxuryResort)
        {
            Resort resort = new Resort();
            resort.LodgingID = lodgingID;
            resort.LodgingName = lodgingName;
            resort.ContactID = contactID;
            resort.LuxuryResort = luxuryResort;
            return resort;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResortChainOwner
        {
            get
            {
                return _ResortChainOwner;
            }
            set
            {
                OnResortChainOwnerChanging(value);
                ReportPropertyChanging("ResortChainOwner");
                _ResortChainOwner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResortChainOwner");
                OnResortChainOwnerChanged();
            }
        }
        private global::System.String _ResortChainOwner;
        partial void OnResortChainOwnerChanging(global::System.String value);
        partial void OnResortChainOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LuxuryResort
        {
            get
            {
                return _LuxuryResort;
            }
            set
            {
                OnLuxuryResortChanging(value);
                ReportPropertyChanging("LuxuryResort");
                _LuxuryResort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LuxuryResort");
                OnLuxuryResortChanged();
            }
        }
        private global::System.Boolean _LuxuryResort;
        partial void OnLuxuryResortChanging(global::System.Boolean value);
        partial void OnLuxuryResortChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="Trip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trip object.
        /// </summary>
        /// <param name="tripID">Initial value of the TripID property.</param>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        /// <param name="lodgingID">Initial value of the LodgingID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Trip CreateTrip(global::System.Int32 tripID, global::System.Int32 destinationID, global::System.Int32 lodgingID, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Trip trip = new Trip();
            trip.TripID = tripID;
            trip.DestinationID = destinationID;
            trip.LodgingID = lodgingID;
            trip.StartDate = startDate;
            trip.EndDate = endDate;
            return trip;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                if (_TripID != value)
                {
                    OnTripIDChanging(value);
                    ReportPropertyChanging("TripID");
                    _TripID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TripID");
                    OnTripIDChanged();
                }
            }
        }
        private global::System.Int32 _TripID;
        partial void OnTripIDChanging(global::System.Int32 value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                OnDestinationIDChanging(value);
                ReportPropertyChanging("DestinationID");
                _DestinationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DestinationID");
                OnDestinationIDChanged();
            }
        }
        private global::System.Int32 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int32 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LodgingID
        {
            get
            {
                return _LodgingID;
            }
            set
            {
                OnLodgingIDChanging(value);
                ReportPropertyChanging("LodgingID");
                _LodgingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LodgingID");
                OnLodgingIDChanged();
            }
        }
        private global::System.Int32 _LodgingID;
        partial void OnLodgingIDChanging(global::System.Int32 value);
        partial void OnLodgingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TripCostUSD
        {
            get
            {
                return _TripCostUSD;
            }
            set
            {
                OnTripCostUSDChanging(value);
                ReportPropertyChanging("TripCostUSD");
                _TripCostUSD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TripCostUSD");
                OnTripCostUSDChanged();
            }
        }
        private Nullable<global::System.Int32> _TripCostUSD;
        partial void OnTripCostUSDChanging(Nullable<global::System.Int32> value);
        partial void OnTripCostUSDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Events_Locations", "Locations")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Events_Locations", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Events_Locations", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("BAModel.FK_Events_Locations", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("BAModel.FK_Events_Locations", "Locations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_Events_Lodging", "Lodging")]
        public Lodging Lodging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lodging>("BAModel.FK_Events_Lodging", "Lodging").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lodging>("BAModel.FK_Events_Lodging", "Lodging").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lodging> LodgingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lodging>("BAModel.FK_Events_Lodging", "Lodging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lodging>("BAModel.FK_Events_Lodging", "Lodging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "FK_OldReservations_Events", "Reservations")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("BAModel.FK_OldReservations_Events", "Reservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("BAModel.FK_OldReservations_Events", "Reservations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "EventActivities", "Activities")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("BAModel.EventActivities", "Activities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("BAModel.EventActivities", "Activities", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="UpcomingTripParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UpcomingTripParticipant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UpcomingTripParticipant object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="tripID">Initial value of the TripID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="destination">Initial value of the Destination property.</param>
        public static UpcomingTripParticipant CreateUpcomingTripParticipant(global::System.Int32 contactID, global::System.Int32 tripID, global::System.DateTime startDate, global::System.String name, global::System.String destination)
        {
            UpcomingTripParticipant upcomingTripParticipant = new UpcomingTripParticipant();
            upcomingTripParticipant.ContactID = contactID;
            upcomingTripParticipant.TripID = tripID;
            upcomingTripParticipant.StartDate = startDate;
            upcomingTripParticipant.Name = name;
            upcomingTripParticipant.Destination = destination;
            return upcomingTripParticipant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TripID
        {
            get
            {
                return _TripID;
            }
            set
            {
                if (_TripID != value)
                {
                    OnTripIDChanging(value);
                    ReportPropertyChanging("TripID");
                    _TripID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TripID");
                    OnTripIDChanged();
                }
            }
        }
        private global::System.Int32 _TripID;
        partial void OnTripIDChanging(global::System.Int32 value);
        partial void OnTripIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                OnDestinationChanging(value);
                ReportPropertyChanging("Destination");
                _Destination = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Destination");
                OnDestinationChanged();
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAModel", "CustomerUpcomingTripParticipant", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.CustomerUpcomingTripParticipant", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.CustomerUpcomingTripParticipant", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("BAModel.CustomerUpcomingTripParticipant", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("BAModel.CustomerUpcomingTripParticipant", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="vOfficeAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vOfficeAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vOfficeAddress object.
        /// </summary>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addressID">Initial value of the addressID property.</param>
        /// <param name="addressType">Initial value of the AddressType property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static vOfficeAddress CreatevOfficeAddress(global::System.String firstName, global::System.String lastName, global::System.Int32 addressID, global::System.String addressType, global::System.Int32 contactID, global::System.DateTime modifiedDate)
        {
            vOfficeAddress vOfficeAddress = new vOfficeAddress();
            vOfficeAddress.FirstName = firstName;
            vOfficeAddress.LastName = lastName;
            vOfficeAddress.addressID = addressID;
            vOfficeAddress.AddressType = addressType;
            vOfficeAddress.ContactID = contactID;
            vOfficeAddress.ModifiedDate = modifiedDate;
            return vOfficeAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 addressID
        {
            get
            {
                return _addressID;
            }
            set
            {
                if (_addressID != value)
                {
                    OnaddressIDChanging(value);
                    ReportPropertyChanging("addressID");
                    _addressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("addressID");
                    OnaddressIDChanged();
                }
            }
        }
        private global::System.Int32 _addressID;
        partial void OnaddressIDChanging(global::System.Int32 value);
        partial void OnaddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street1
        {
            get
            {
                return _Street1;
            }
            set
            {
                OnStreet1Changing(value);
                ReportPropertyChanging("Street1");
                _Street1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street1");
                OnStreet1Changed();
            }
        }
        private global::System.String _Street1;
        partial void OnStreet1Changing(global::System.String value);
        partial void OnStreet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street2
        {
            get
            {
                return _Street2;
            }
            set
            {
                OnStreet2Changing(value);
                ReportPropertyChanging("Street2");
                _Street2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street2");
                OnStreet2Changed();
            }
        }
        private global::System.String _Street2;
        partial void OnStreet2Changing(global::System.String value);
        partial void OnStreet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryRegion
        {
            get
            {
                return _CountryRegion;
            }
            set
            {
                OnCountryRegionChanging(value);
                ReportPropertyChanging("CountryRegion");
                _CountryRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryRegion");
                OnCountryRegionChanged();
            }
        }
        private global::System.String _CountryRegion;
        partial void OnCountryRegionChanging(global::System.String value);
        partial void OnCountryRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressType
        {
            get
            {
                return _AddressType;
            }
            set
            {
                if (_AddressType != value)
                {
                    OnAddressTypeChanging(value);
                    ReportPropertyChanging("AddressType");
                    _AddressType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AddressType");
                    OnAddressTypeChanged();
                }
            }
        }
        private global::System.String _AddressType;
        partial void OnAddressTypeChanging(global::System.String value);
        partial void OnAddressTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                if (_ModifiedDate != value)
                {
                    OnModifiedDateChanging(value);
                    ReportPropertyChanging("ModifiedDate");
                    _ModifiedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedDate");
                    OnModifiedDateChanged();
                }
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAModel", Name="vPaymentsforPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vPaymentsforPeriod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vPaymentsforPeriod object.
        /// </summary>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        public static vPaymentsforPeriod CreatevPaymentsforPeriod(global::System.DateTime reservationDate, global::System.String firstName, global::System.String lastName, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String locationName)
        {
            vPaymentsforPeriod vPaymentsforPeriod = new vPaymentsforPeriod();
            vPaymentsforPeriod.ReservationDate = reservationDate;
            vPaymentsforPeriod.FirstName = firstName;
            vPaymentsforPeriod.LastName = lastName;
            vPaymentsforPeriod.StartDate = startDate;
            vPaymentsforPeriod.EndDate = endDate;
            vPaymentsforPeriod.LocationName = locationName;
            return vPaymentsforPeriod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservationDate
        {
            get
            {
                return _ReservationDate;
            }
            set
            {
                if (_ReservationDate != value)
                {
                    OnReservationDateChanging(value);
                    ReportPropertyChanging("ReservationDate");
                    _ReservationDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReservationDate");
                    OnReservationDateChanged();
                }
            }
        }
        private global::System.DateTime _ReservationDate;
        partial void OnReservationDateChanging(global::System.DateTime value);
        partial void OnReservationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                if (_FirstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _FirstName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                if (_LastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _LastName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                if (_EndDate != value)
                {
                    OnEndDateChanging(value);
                    ReportPropertyChanging("EndDate");
                    _EndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EndDate");
                    OnEndDateChanged();
                }
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                if (_LocationName != value)
                {
                    OnLocationNameChanging(value);
                    ReportPropertyChanging("LocationName");
                    _LocationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LocationName");
                    OnLocationNameChanged();
                }
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BAModel", Name="Mail")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Mail : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street1
        {
            get
            {
                return _Street1;
            }
            set
            {
                OnStreet1Changing(value);
                ReportPropertyChanging("Street1");
                _Street1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street1");
                OnStreet1Changed();
            }
        }
        private global::System.String _Street1;
        partial void OnStreet1Changing(global::System.String value);
        partial void OnStreet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street2
        {
            get
            {
                return _Street2;
            }
            set
            {
                OnStreet2Changing(value);
                ReportPropertyChanging("Street2");
                _Street2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street2");
                OnStreet2Changed();
            }
        }
        private global::System.String _Street2;
        partial void OnStreet2Changing(global::System.String value);
        partial void OnStreet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BAModel", Name="TripPayment")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class TripPayment : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TripPayment object.
        /// </summary>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        public static TripPayment CreateTripPayment(global::System.DateTime paymentDate, global::System.Decimal amount, global::System.DateTime reservationDate, global::System.String firstName, global::System.String lastName, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String locationName)
        {
            TripPayment tripPayment = new TripPayment();
            tripPayment.PaymentDate = paymentDate;
            tripPayment.Amount = amount;
            tripPayment.ReservationDate = reservationDate;
            tripPayment.FirstName = firstName;
            tripPayment.LastName = lastName;
            tripPayment.StartDate = startDate;
            tripPayment.EndDate = endDate;
            tripPayment.LocationName = locationName;
            return tripPayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservationDate
        {
            get
            {
                return _ReservationDate;
            }
            set
            {
                OnReservationDateChanging(value);
                ReportPropertyChanging("ReservationDate");
                _ReservationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservationDate");
                OnReservationDateChanged();
            }
        }
        private global::System.DateTime _ReservationDate;
        partial void OnReservationDateChanging(global::System.DateTime value);
        partial void OnReservationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();

        #endregion
    }

    #endregion
    
}
